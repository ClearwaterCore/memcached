Description: Replace unconditional use of PATH_MAX
 The patch below fixes an unconditional use of PATH_MAX which causes the
 GNU/Hurd platform to fail to build from source the memcached package.
Forwarded: no
Bug-Debian: http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=637695
Author: Svante Signell <svante.signell@telia.com>
Reviewed-by: Arno TÃ¶ll <debian@toell.net>
Last-Update: 2011-09-15

Index: memcached/daemon/memcached.c
===================================================================
--- memcached.orig/daemon/memcached.c    2012-02-09 13:52:15.242054000 -0800
+++ memcached/daemon/memcached.c    2012-02-09 13:53:59.891412592 -0800
@@ -7470,12 +7470,15 @@
     /* create the listening socket, bind it, and init */
     if (settings.socketpath == NULL) {
         const char *portnumber_filename = getenv("MEMCACHED_PORT_FILENAME");
-        char temp_portnumber_filename[PATH_MAX];
+        char *temp_portnumber_filename = NULL;
+        size_t len;
         FILE *portnumber_file = NULL;

         if (portnumber_filename != NULL) {
+            len = strlen(portnumber_filename)+4+1;
+            temp_portnumber_filename = malloc(len);
             snprintf(temp_portnumber_filename,
-                     sizeof(temp_portnumber_filename),
+                     len,
                      "%s.lck", portnumber_filename);

             portnumber_file = fopen(temp_portnumber_filename, "a");
@@ -7513,6 +7516,7 @@
         if (portnumber_file) {
             fclose(portnumber_file);
             rename(temp_portnumber_filename, portnumber_filename);
+            free(temp_portnumber_filename);
         }
     }

